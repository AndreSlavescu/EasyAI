.version 7.5
.target sm_80 // targeting RTX 3090
.address_size 64

/*
Prefix Sum (Scan):

Given an N-element array, sum all indices up to a given index, inclusive.

Example:

Input Array:
    [1, 2, 3, 4, 5]

Output Array:
    [1, 3, 6, 10, 15]


Args:
    - input: fp32_param
    - output: uint64_param

Returns:
    - void
*/
.visible .entry warpPrefixSum( 
    .param .f32 input,
    .param .u64 output
) {
    .reg .f32 %f_val, %f_temp;
    .reg .u32 %r_lane, %r_idx, %r_temp;
    .reg .pred %predicate;
    .reg .u64 %rd_out, %rd_addr;

    ld.param.f32 %f_val, [input];
    ld.param.u64 %rd_out, [output];
    mov.u32 %r_lane, %laneid;

    shfl.sync.up.b32 %f_temp, %f_val, 1, 0x1f, 0xffffffff;
    setp.ge.u32 %predicate, %r_lane, 1;
    @%predicate add.f32 %f_val, %f_val, %f_temp;

    shfl.sync.up.b32 %f_temp, %f_val, 2, 0x1f, 0xffffffff;
    setp.ge.u32 %predicate, %r_lane, 2;
    @%predicate add.f32 %f_val, %f_val, %f_temp;

    shfl.sync.up.b32 %f_temp, %f_val, 4, 0x1f, 0xffffffff;
    setp.ge.u32 %predicate, %r_lane, 4;
    @%predicate add.f32 %f_val, %f_val, %f_temp;

    shfl.sync.up.b32 %f_temp, %f_val, 8, 0x1f, 0xffffffff;
    setp.ge.u32 %predicate, %r_lane, 8;
    @%predicate add.f32 %f_val, %f_val, %f_temp;

    shfl.sync.up.b32 %f_temp, %f_val, 16, 0x1f, 0xffffffff;
    setp.ge.u32 %predicate, %r_lane, 16;
    @%predicate add.f32 %f_val, %f_val, %f_temp;

    .reg .u32 %r_tid, %r_ntid, %r_ctaid;
    mov.u32 %r_tid, %tid.x;
    mov.u32 %r_ntid, %ntid.x;
    mov.u32 %r_ctaid, %ctaid.x;

    //                blockIdx.x     blockDim.x    threadIdx.x
    // global_index =  ctaid.x    *    ntid.x   +    tid.x
    mad.lo.u32 %r_idx, %r_ctaid, %r_ntid, %r_tid;
    
    // get byte offset (global_index * 4)
    mul.lo.u32 %r_temp, %r_idx, 4;
    cvt.u64.u32 %rd_addr, %r_temp;
    add.u64 %rd_addr, %rd_out, %rd_addr;

    st.global.f32 [%rd_addr], %f_val;
    ret;
}